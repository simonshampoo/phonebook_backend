{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/persons.js","components/Persons.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","newName","newNumber","handleNameSubmit","handleNameChange","handleNumberChange","onSubmit","type","baseUrl","personService","getAll","axios","get","then","response","data","create","person","post","update","id","put","console","log","remove","delete","Error","message","className","Persons","persons","useState","errorMessage","setErrorMessage","map","name","number","onClick","window","confirm","catch","error","setTimeout","Success","App","setPersons","setNewName","setNewNumber","filter","setFilter","successMessage","setSuccessMessage","useEffect","peopleList","filteredPersons","toLowerCase","includes","event","target","preventDefault","existingPerson","updatedExistingPerson","personObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50f6be4e.chunk.js","sourcesContent":["const Filter = ({value, onChange}) => {\n    return <input value = {value} onChange = {onChange}/>\n}\n\nexport default Filter;","import React from \"react\";\n\nconst PersonForm = ({\n  newName,\n  newNumber,\n  handleNameSubmit,\n  handleNameChange,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={handleNameSubmit}>\n      <h2>add a new</h2>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => axios.get(baseUrl).then((response) => response.data);\n\nconst create = (person) =>\n  axios.post(baseUrl, person).then((response) => response.data);\n\nconst update = (id, person) =>\n  axios\n    .put(`${baseUrl}/${id}`, person)\n    .then((response) => response.data)\n    .then(console.log(\"1. baseUrl/id: \", `${baseUrl}/${id}`));\n\nconst remove = (id) =>\n  axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\n\nconst personService = {\n  getAll,\n  create,\n  update,\n  remove,\n};\n\nexport default personService;\n","import React, { useState } from \"react\";\nimport personService from \"../services/persons\";\nimport \"../App.css\";\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nconst Persons = ({ persons }) => {\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <Error message={errorMessage} />\n      <ul>\n        {persons.map((person) => (\n          <li key={person.name}>\n            {person.name}: {person.number}{\" \"}\n            <button\n              onClick={() => {\n                if (window.confirm(`delete ${person.name}?`))\n                  //TODO, update state somehow\n                  personService.remove(person.id).catch((error) => {\n                    setErrorMessage(`${person.name} was already removed. Please refresh the page.`);\n                    setTimeout(() => setErrorMessage(null), 5000);\n                  });\n              }}\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Persons;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./services/persons\";\nimport \"./App.css\";\n\nconst Success = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"success\">{message}</div>;\n};\n\n//@TODO update state on http delete in Persons.js\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((peopleList) => {\n      setPersons(peopleList);\n    });\n  }, []);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleNameSubmit = (event) => {\n    event.preventDefault();\n\n    const phoneBookContains = persons.filter((person) =>\n      person.name.toLowerCase().includes(newName.toLowerCase())\n    );\n    const existingPerson = phoneBookContains[0];\n    const updatedExistingPerson = { ...existingPerson, number: newNumber };\n\n    if (existingPerson) {\n      if (\n        window.confirm(\n          `${existingPerson.name} is already in the phonebook. Replace this person?`\n        )\n      ) {\n        personService\n          .update(existingPerson.id, updatedExistingPerson)\n          .then(() => {\n            setPersons(\n              setPersons.map((person) =>\n                person.id !== existingPerson.id //create new array mapping non-matching ID's to original persons, if id matches, then map to our updatedExistingPerson\n                  ? person\n                  : updatedExistingPerson\n              )\n            );\n            setNewNumber(\"\");\n            setNewName(\"\");\n          })\n          .catch((error) => {\n            console.log(\"2. \", error);\n            console.log(\"3. existingPerson: \", existingPerson);\n            console.log(\"4. updatedExistingPerson: \", updatedExistingPerson);\n          });\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      };\n      personService.create(personObject).then(\n        setSuccessMessage(\n          `${personObject.name} has been added to the phonebook`\n        ),\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000)\n      );\n      setPersons(persons.concat(personObject));\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  const filteredPersons = persons.filter((person) =>\n    person.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Success message={successMessage} />\n      <Filter value={filter} onChange={handleFilterChange} />\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameSubmit={handleNameSubmit}\n        handleNumberChange={handleNumberChange}\n        handleNameChange={handleNameChange}\n      />\n      <Persons persons={filteredPersons} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}